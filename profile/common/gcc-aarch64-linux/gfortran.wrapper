#!/usr/bin/env bash
#
# Wrapper for gfortran (aarch64 linux)

# Examine arguments to decide whether we're actually compiling

COMPILING="n"

while getopts ":cSEo:" opt; do
    case $opt in
	c|S|E|o)
	    COMPILING="y"
	    ;;
    esac
done

if [ "$OPTIND" -le "$#" ]; then
   COMPILING="y"
fi

# Determine the math slot path

if [ -n "@SDK_MATH_SLOT@" ]; then
    MATH_SLOT_PATH=@SDK_ROOT@/math-slots/@SDK_MATH_SLOT@
else
    MATH_SLOT_PATH=@SDK_ROOT@/math-slots/default
fi

# Set up compilation flags

FLAGS=$SDK2_GCC_FLAGS

if [[ $COMPILING == "y" ]]; then

    # Set flags to suppress FPE summary notices

    FLAGS="${FFLAGS} -ffpe-summary=none"

    # Add SDK directories to the libary run path

    FLAGS="${FLAGS} -Wl,-rpath -Wl,@SDK_ROOT@/lib"
    FLAGS="${FLAGS} -Wl,-rpath -Wl,@SDK_ROOT@/lib64"
    FLAGS="${FLAGS} -Wl,-rpath -Wl,${MATH_SLOT_PATH}/lib"

    # Add SDK directories to the module search path

    FLAGS="${FLAGS} -I@SDK_ROOT@/include -I${MATH_SLOT_PATH}/include"

    # Deal with multiarch

    if [ -d /usr/lib/x86_64-linux-gnu ]; then
        export LIBRARY_PATH="/usr/lib/x86_64-linux-gnu:${LIBRARY_PATH}"
    fi

    if [ -d /usr/include/x86_64-linux-gnu ]; then
        FLAGS="${FLAGS} -I/usr/include/x86_64-linux-gnu"
    fi

fi

# Launch gfortran

eval $0.exec ${FLAGS} $(printf '%q ' "$@")
exit $?
